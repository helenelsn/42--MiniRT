

1) créer tes structure (1 general et 1 pour représenter 1 philo)

2)parsing minimum (ou plus si t a la fois) pour remplir ta struct général

3) faire les fonction relou mais utile partout
    -gettimestamp (en gros c'est une fonction pour avoir le temps ecoulé depuis le début 
        de ta simlation) c'est un peu relou pcq c'est pas la meme unité (assez facil a 
        tester avec des sleep)
    -ft_usleep (faut juste recoder usleep en checkant que les philo sont pas mort)

4) lancer un thread par philo (pour l'instant les philo affiche juste leur id et le 
        timetoeat etc pour verifier que ils y ont bien acces)

5) creer ta boucle de base pour tes philo; pour pouvoir simplifier la mise en place, tu peux 
    faire des fonctions qui vont juste afficher l'état du philo et le timestampe, peut etre
    juste sleep le temps qu'elle sont censée durer pour que tu puisse lire l'output

6) creer tes mutex et mettre en place la fonction pendant laquelle les philos vont les 
    demander (perso je le fais pendant que les philo think mais ça dépend un peux des gens)
    a ce stade c'est pas grave si ils se rendent pas compte qu'il sont mort,  il faut juste
    pas qu'il mangent sans avoire deux fourchette

7) a partir de la ça devrait tourner pas trop mal :) et c'est le moment ou valgrind devient 
    vraiment utile
    mettre en place le monitoring (c'est un thread en plus, le vrai défi c'est qu'il est 
    acces a tout les philo et qu'il puisse récuperer l'info de quand ils ont mangé pour la
    derniere fois sans que valgrind pete un cable)
    mettre en place le check de si ils ont tous mangé (c'est un peu la meme idée que l'autre)

8) et la il reste plus que à debugger et tester
