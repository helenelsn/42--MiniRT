Structures :
- Prendre en compte, pour chaque objet modelise : 
    - son taux de reflexion -> OK LN
    - de transparence 

Fonctions :

// - Compute la distance d au viewport, ainsi que la hauteur et largeur du viewport,
  a partir du FOV -> OK LN

- Resolution des intersections droite-sphere/plan/cylindre/Cone/Hyperboloid/Paraboloid -
      - sphere -> suz -> plan sphere ok, cylindre c'est chaud

- Computation de la couleur et l intensite lumineuse pour chaque light ray touchant un 
  objet (ou aucun objet a l infini) -> OK LN

- Fonction qui calcule, pour chaque forme géométrique pour un point P donné sur sa surface,
  la normale à ce point 

- Computation des reflections (3), ie implementer une fonction recursive s aidant du point precedent -> OK LN
- Computation des ombres -> OK LN
- mlx création -> OK SUZ

- implémenter bsp (ou kd-tree) -> ln (ou tu veux le faire ?) ->chaud participer -> tester si marche correctement

- Implementer les matrices + surcharge operateurs opérations de base pour matrices 
  (addition, soustraction, multiplication) pour les transformations a effectuer (rotation, zoom, etc....)
    ->suz grave chaud tenter les rotations



Changement de referentiels ? J ai un peu du mal, tu vas devoir expliquer (emoji uwu) 

